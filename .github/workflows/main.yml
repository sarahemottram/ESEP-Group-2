name: Game CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  BUILD_CONFIG: Release
  SCENE_LIST: "Assets/Scenes/Main.unity"

jobs:

  build:
    name: Test and Build
    runs-on: ubuntu-latest

    steps:

    # Checkout
    - name: Checkout repository
      uses: actions/checkout@v4

    # Cache
    - uses: actions/cache@v3
      with:
        path: Pac-Man/Library
        key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
        restore-keys: |
          Library-

    # Test
    - name: Run tests
      if: ${{ github.event_name == 'pull_request' }}
      uses: game-ci/unity-test-runner@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        projectPath: Pac-Man
        testMode: playMode

    # Build
    - name: Build project
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: game-ci/unity-builder@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        targetPlatform: StandaloneWindows64
        projectPath: Pac-Man
        buildConfiguration: ${{ env.BUILD_CONFIG }}
        sceneList: ${{ env.SCENE_LIST }}
        allowDirtyBuild: true

    # Upload
    - uses: actions/upload-artifact@v3
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      with:
        name: Pac-Man Build
        path: build

    # Versioning
    - name: Increment version
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      run: |
        currentVersion=$(grep -oP 'bundleVersion: \K.*' Pac-Man/ProjectSettings/ProjectSettings.asset)
        newVersion=$(echo $currentVersion | awk -F'.' '{$NF+=1; printf "%s.%s.%03d", $1, $2, $3}')
        sed -i "s/bundleVersion: .*/bundleVersion: $newVersion/" Pac-Man/ProjectSettings/ProjectSettings.asset
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git add Pac-Man/ProjectSettings/ProjectSettings.asset
        git commit -m "Increment version to $newVersion"
        git push

    # Notification
    - name: Send email notification
      if: ${{ failure() }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Build failed for Pac-Man
        body: The build for Pac-Man failed. Please check the workflow run.
        to: Pmtemesgen@gmail.com
        from: GitHub Actions